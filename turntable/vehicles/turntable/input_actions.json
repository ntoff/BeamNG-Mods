// this file holds all the actions that only this specific vehicle can perform
// ===========================================================================
// the non self-descriptive fields are:
// "onChange":   code to run when the controller position changes     (applies to: buttons, keys, pov hat, axes)
// "onDown":     code to run when the controller becomes pressed down (applies to: buttons, keys, pov hat)
// "onUp":       code to run when the controller is lifted up         (applies to: buttons, keys, pov hat)
// "onRelative": code to run when the controller position changes     (applies to: mouse axis when holding right mouse button)
// "ctx" (defaults to 'vlua'): where the code above ^ must be run. it can be:
//    - vlua for vehicle lua async
//    - elua for engine  lua async
//    - tlua for engine  lua  sync
//    - ui for javascript    async
// "isCentered" (defaults to false): whether the axis values will be reported from -1 to +1 (true) or from 0 to +1 (false)
// "order":      helps set the display order in the Controls menu
{
"toggle_direction" :{"order":  3, "onDown":"controller.mainController.toggleDirection()", "title": "ui.inputActions.large_spinner.toggle_direction.title" , "desc": "ui.inputActions.large_spinner.toggle_direction.description" },
"rpm_increase"   :{"order":  1, "onChange":"electrics.values.targetRPMRatioIncrease = VALUE", "title": "ui.inputActions.large_spinner.rpm_increase.title", "desc": "ui.inputActions.large_spinner.rpm_increase.description" },
"rpm_decrease"   :{"order":  2, "onChange":"electrics.values.targetRPMRatioDecrease = VALUE", "title": "ui.inputActions.large_spinner.rpm_decrease.title", "desc": "ui.inputActions.large_spinner.rpm_decrease.description" },
}

